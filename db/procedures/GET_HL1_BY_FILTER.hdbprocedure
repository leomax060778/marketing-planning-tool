PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_HL1_BY_FILTER" ( 
	 IN in_budget_year_id BIGINT
	,IN in_region_id BIGINT
	,IN in_subregion_id BIGINT
	,IN in_user_id BIGINT
	,IN in_is_super_Admin tinyint
	,OUT out_result TABLE (
		hl1_id BIGINT
		, acronym NVARCHAR(25)
		, description NVARCHAR(255)
--		, budget_year_id INTEGER
--		, region_id BIGINT
--		, subregion_id BIGINT
		, REGION_NAME NVARCHAR(255)
		, SUBREGION_NAME NVARCHAR(255)
		, BUDGET_YEAR INTEGER
		, budget DECIMAL(19, 2)
        , hl2_total_count INTEGER
        , version INTEGER
        , IS_LOCKED TINYINT
		)
	, OUT out_total_budget DECIMAL(19, 2)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
	DECLARE va_total_budget DECIMAL(19, 2);
	va_total_budget := 0;

	va_subresult =
	SELECT 
		HL1.hl1_id
		, UPPER(HL1.acronym) as acronym
		, HL1.description
--		, HL1.budget_year_id
		, HL1.region_id
		--, HL1.subregion_id
		, R.REGION_NAME
		, SR.SUBREGION_NAME
		, BUY.BUDGET_YEAR
		, HL1.budget
		, COUNT(distinct HL2.hl2_id) AS hl2_total_count
		, HL1.VERSION
		, (CASE WHEN BUY.VERSIONED_END_DATE >= CURRENT_TIMESTAMP THEN 0 ELSE 1 END) AS IS_LOCKED
	FROM HL1
	--INNER JOIN HL1_USER ON HL1_USER.HL1_ID = HL1.HL1_ID
	INNER JOIN BUDGET_YEAR BUY ON BUY.budget_year_id = HL1.budget_year_id
	LEFT JOIN REGION R ON R.region_id = HL1.region_id
	LEFT JOIN SUBREGION SR ON SR.subregion_id = HL1.subregion_id
	LEFT JOIN HL2 ON HL2.HL1_ID = HL1.HL1_ID AND HL2.deleted = 0 AND HL2.enabled = 1
	WHERE 
		--(HL1_USER.USER_ID = in_user_id OR in_is_super_Admin = 1)
		HL1.deleted = 0
		AND HL1.enabled = 1
		AND (BUY.BUDGET_YEAR_ID = in_budget_year_id)-- OR in_budget_year_id = 0) 
	    --AND (R.REGION_ID = in_region_id OR in_region_id = 0)
	    AND (SR.SUBREGION_ID = in_subregion_id OR in_subregion_id = 0)
	    AND HL1.HL1_ID IN (SELECT HL1_ID FROM HL1_USER WHERE USER_ID = in_user_id OR in_is_super_Admin = 1)
	--GROUP BY GROUPING SETS ((HL1.hl1_id, HL1.acronym, HL1.description
	--, HL1.region_id, SR.SUBREGION_NAME, BUY.BUDGET_YEAR, R.REGION_NAME, HL1.budget))
	GROUP BY HL1.hl1_id, HL1.acronym, HL1.description
	, HL1.region_id, SR.SUBREGION_NAME, BUY.BUDGET_YEAR
	, R.REGION_NAME, HL1.budget, HL1.VERSION, BUY.VERSIONED_END_DATE
	ORDER BY HL1.acronym ASC;

    -- this filter is necesary to filter GLOBALS, where region_id = 0
    if in_region_id = -1 then
        out_result = select T.HL1_ID
                            ,T.ACRONYM
                            ,T.DESCRIPTION
                            ,T.REGION_NAME
                            ,T.SUBREGION_NAME
                            ,T.BUDGET_YEAR
                            ,T.BUDGET
                            ,T.HL2_TOTAL_COUNT
                             , T.VERSION
                             , T.IS_LOCKED
                              from :va_subresult T
                    where T.REGION_ID = 0;
    else
        out_result = select T.HL1_ID
                            ,T.ACRONYM
                            ,T.DESCRIPTION
                            ,T.REGION_NAME
                            ,T.SUBREGION_NAME
                            ,T.BUDGET_YEAR
                            ,T.BUDGET
                            ,T.HL2_TOTAL_COUNT
                            , T.VERSION
                            , T.IS_LOCKED from :va_subresult T
                    where (T.REGION_ID = in_region_id OR in_region_id = 0);
     end if;

	-- Calculate the total budget
	SELECT SUM(T.budget)
	INTO out_total_budget
	FROM :out_result T;

	--out_total_budget := va_total_budget;
	
END;

