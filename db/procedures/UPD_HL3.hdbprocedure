PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::UPD_HL3" (	
	IN in_hl3_id BIGINT,
	IN in_acronym NVARCHAR(25),
	IN in_hl3_description NVARCHAR(100),
	IN in_business_owner_id BIGINT,
	IN in_hl3_fnc_budget_total DECIMAL(19,2),
	IN in_in_budget TINYINT,
	IN in_user_id BIGINT,
	
	OUT out_result_hl3 BIGINT,
	OUT out_result_hl3_fnc BIGINT,
	OUT out_crm_id NVARCHAR(255),
	OUT out_budget_flag TINYINT	
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	AS
BEGIN
	
	DECLARE va_current_acronym NVARCHAR(25);
	DECLARE va_crm_id BIGINT;
	DECLARE va_hl3_fnc_budget_total DECIMAL (19,2);
	
	out_crm_id := 0;
	out_budget_flag := 0;
	
	-- Verifies if the CRM id in the input is different than the existing one 
	-- and proceeds. If so, the UPD_CRM procedure must be executed after UPD_HL3
	SELECT acronym, crm_id
	INTO va_current_acronym, va_crm_id
	FROM HL3
	WHERE hl3_id = in_hl3_id;
	
	IF in_acronym <> va_current_acronym
	THEN
		out_crm_id := va_crm_id;
	END IF;
	
	-- Verifies if budget changes exists. If the new assigned budget is different
	-- than the current one, the 'va_budget_changed' flag is updated to 1.
	SELECT hl3_fnc_budget_total
	INTO va_hl3_fnc_budget_total
	FROM HL3_FNC
	WHERE hl3_id = in_hl3_id
	  AND deleted = 0
	  AND enabled = 1;
	
	IF in_hl3_fnc_budget_total <> va_hl3_fnc_budget_total
	THEN
		out_budget_flag := 1;
	END IF;
	 
	BEGIN AUTONOMOUS TRANSACTION
		 
	--HL3 table update
		UPDATE HL3
		SET hl3_description = IFNULL(in_hl3_description, hl3_description),
			acronym = IFNULL(in_acronym, acronym),
			business_owner_id = IFNULL(in_business_owner_id, business_owner_id), 
			modified_user_id = in_user_id,
			modified_date_tz = CURRENT_TIMESTAMP
			WHERE hl3_id = in_hl3_id
				AND deleted = 0
				AND enabled = 1;
			
			SELECT ::ROWCOUNT into out_result_hl3 FROM DUMMY;
			
			IF out_budget_flag = 1 AND out_result_hl3 > 0
			THEN 
				--HL3 FNC budget update
				UPDATE HL3_FNC
				SET hl3_fnc_budget_total = IFNULL(in_hl3_fnc_budget_total, hl3_fnc_budget_total),
					in_budget = in_in_budget,
				 	modified_user_id = in_user_id,
				 	modified_date_tz = CURRENT_TIMESTAMP
				WHERE hl3_id = in_hl3_id
					AND deleted = 0
				   	AND enabled = 1;
				   	
				SELECT ::ROWCOUNT into out_result_hl3_fnc FROM DUMMY;
			END IF;				
	END;
END;
