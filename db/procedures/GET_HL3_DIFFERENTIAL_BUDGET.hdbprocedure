PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_HL3_DIFFERENTIAL_BUDGET" ( 
	IN in_hl3_id BIGINT,
	OUT out_hl3_others_sum_budget DECIMAL(19,5),
	OUT out_hl3_budget_total DECIMAL(19,5)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	READS SQL DATA AS
BEGIN

	DECLARE va_hl2_id BIGINT;
	DECLARE va_hl3_others_sum_budget DECIMAL(19,5);
	DECLARE va_hl3_fnc_budget_total DECIMAL(19,5);
	
	va_hl3_fnc_budget_total := 0;
	va_hl3_others_sum_budget := 0;
	
	-- Grab the parent HL2 into va_hl2_id
	SELECT HL2.hl2_id
	INTO va_hl2_id
	FROM HL2
	INNER JOIN HL3 ON HL2.hl2_id = HL3.hl2_id
	WHERE HL3.hl3_id = in_hl3_id
	  AND HL3.deleted = 0
	  AND HL3.enabled = 1;
	  
	-- Grab the budget of the HL3
	SELECT HL3_FNC.hl3_fnc_budget_total
	INTO va_hl3_fnc_budget_total
	FROM HL3_FNC
	WHERE HL3_FNC.hl3_id = in_hl3_id
	  AND HL3_FNC.deleted = 0
	  AND HL3_FNC.enabled = 1;
	  
	-- Grab the sum of budgets from all the HL3s related to the HL2
	-- exceptuating the HL3 given as input parameter and the HL3 that
	-- are currently out of budget
	
	SELECT SUM(HL3_FNC.hl3_fnc_budget_total)
	INTO va_hl3_others_sum_budget
	FROM HL3_FNC
	INNER JOIN HL3 ON HL3_FNC.hl3_id = HL3.hl3_id
	INNER JOIN HL2 ON HL2.hl2_id = HL3.hl2_id
	WHERE HL2.hl2_id = va_hl2_id
	  AND HL3.deleted = 0
	  AND HL3.enabled = 1
	  AND HL3_FNC.in_budget = 1
	  AND HL3.hl3_id <> in_hl3_id;
	  
	out_hl3_others_sum_budget := IFNULL(va_hl3_others_sum_budget, 0);  
	out_hl3_budget_total := IFNULL(va_hl4_others_sum_budget, 0);
	
END;
