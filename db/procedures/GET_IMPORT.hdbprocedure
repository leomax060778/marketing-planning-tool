PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_IMPORT" (
    OUT OUT_RESULT TABLE(
	IMPORT_L5_L6_ID BIGINT,
	DESCRIPTION NVARCHAR(255),
	USER_NAME NVARCHAR(500),
	CREATED_DATE_TZ TIMESTAMP,
	DELETED TINYINT,
	count_l5 integer,
	count_l6 integer,
	total_row integer))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	READS SQL DATA AS
BEGIN

	OUT_RESULT =
	SELECT
    	    I.IMPORT_L5_L6_ID
    	  , I.DESCRIPTION
    	  , CONCAT(CONCAT(U.LAST_NAME, ', '), U.FIRST_NAME) AS USER_NAME
    	  , I.CREATED_DATE_TZ
    	  , I.DELETED
    	  , L5.COUNT_L5 AS count_l5
      	  , L6.COUNT_L6 AS count_l6
      	  , T.TOTAL_ROW AS total_row
    	  FROM IMPORT_L5_L6 I
    	  INNER JOIN USER U ON U.USER_ID = I.CREATED_USER_ID
          LEFT OUTER JOIN (SELECT COUNT(HL5_ID) AS COUNT_L5, HL5.IMPORT_ID  FROM HL5 where hl5.IMPORT_ID is not null group by HL5.IMPORT_ID) L5 on L5.IMPORT_ID = I.IMPORT_L5_L6_ID
          LEFT OUTER JOIN (SELECT COUNT(HL6_ID) AS COUNT_L6, HL6.IMPORT_ID  FROM HL6 where hl6.IMPORT_ID is not null group by HL6.IMPORT_ID) L6 on L6.IMPORT_ID = I.IMPORT_L5_L6_ID
          LEFT OUTER JOIN (SELECT COUNT(UPLOAD_L5_L6_LOG_ID) AS TOTAL_ROW, IMPORT_ID FROM UPLOAD_L5_L6_LOG GROUP BY IMPORT_ID) T ON T.IMPORT_ID = I.IMPORT_L5_L6_ID
          ORDER BY I.IMPORT_L5_L6_ID ASC, I.CREATED_DATE_TZ ASC;
END;
