PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_PATH_BY_LEVEL_PARENT" ( 
	  IN in_lh BIGINT  		--IS DE CURRENT LEVEL
	, IN in_parent_id BIGINT 	--IS THE PARENT LEVEL ID OF HL
	, OUT out_result TABLE (path_tph NVARCHAR(255))) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
	 
	
	IF in_lh = 4 THEN
		out_result = SELECT TOP 1
--		CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(HL2.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)), '-'), HL3.ACRONYM), '-'), HL4.ACRONYM) AS path_tph 
		CONCAT(CONCAT(CONCAT(HL2.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)), '-'), HL3.ACRONYM) AS path_tph 
		--INTO out_result 
		FROM HL3 
		INNER JOIN HL2 ON HL2.HL2_ID = HL3.HL2_ID
		INNER JOIN BUDGET_YEAR BGY ON HL2.BUDGET_YEAR_ID = BGY.BUDGET_YEAR_ID
		WHERE 
		HL3.HL3_ID = in_parent_id;
	ELSEIF in_lh = 3 THEN 
		out_result = SELECT TOP 1
--		CONCAT(CONCAT(CONCAT(HL2.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)), '-'), HL3.ACRONYM) AS path_tph
		CONCAT(HL2.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)) AS path_tph
		--INTO out_result 
		FROM HL2
		INNER JOIN BUDGET_YEAR BGY ON HL2.BUDGET_YEAR_ID = BGY.BUDGET_YEAR_ID
    	WHERE 
		HL2.HL2_ID = in_parent_id;
		/*
	ELSEIF in_lh = 2 THEN
		out_result = SELECT TOP 1
		CONCAT(HL2.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)) AS path_tph
		FROM HL2 
		INNER JOIN BUDGET_YEAR BGY ON HL2.BUDGET_YEAR_ID = BGY.BUDGET_YEAR_ID;
		*/
	END IF;	
END;

