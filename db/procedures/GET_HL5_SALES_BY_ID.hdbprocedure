PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_HL5_SALES_BY_ID"
(
in in_hl5_id  bigint
,OUT out_result TABLE (
hl5_sales_id INTEGER,
organization_id INTEGER,
organization_type tinyint,
description nvarchar(255),
organization_name nvarchar(255),
currency_id INTEGER,
currency_value decimal(19, 6),
amount decimal(19, 6)
)
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "PLANNING_TOOL" AS
BEGIN
sub_out_result =
	(select
		hl5_sales.hl5_sales_id,
	    hl5_sales.organization_id,
	    hl5_sales.amount,
	    hl5_sales.organization_type,
	    hl5_sales.description,
	    hl5_sales.currency_id,
	    region.region_name as organization_name
	from hl5_sales
	inner join region on region.region_id = hl5_sales.organization_id
	where hl5_id = in_hl5_id
	and hl5_sales.enabled = 1 and hl5_sales.deleted = 0)

	union all

	(select
    		hl5_sales.hl5_sales_id,
    	    hl5_sales.organization_id,
    	    hl5_sales.amount,
    	    hl5_sales.organization_type,
    	    hl5_sales.description,
    	    hl5_sales.currency_id,
    	    hl2.organization_acronym as organization_name
    	from hl5_sales
        inner join hl2 on hl2.hl2_id = hl5_sales.organization_id
    	where hl5_id = in_hl5_id
    	and hl5_sales.enabled = 1 and hl5_sales.deleted = 0)

    	UNION ALL

    	(select
             		hl5_sales.hl5_sales_id,
             	    hl5_sales.organization_id,
             	    hl5_sales.amount,
             	    hl5_sales.organization_type,
             	    hl5_sales.description,
             	    hl5_sales.currency_id,
             	    null as organization_name
             	from hl5_sales
             	where hl5_id = in_hl5_id and hl5_sales.organization_type = 3
             	and hl5_sales.enabled = 1 and hl5_sales.deleted = 0);

va_out_result = select
                T.HL5_SALES_ID,
                T.ORGANIZATION_ID,
                T.ORGANIZATION_TYPE,
                T.DESCRIPTION,
                T.ORGANIZATION_NAME,
                T.CURRENCY_ID,
                CURRENCY.CURRENCY_VALUE,
                COALESCE(T3.AMOUNT, T.AMOUNT, 0) AS AMOUNT
            from :sub_out_result T
            INNER JOIN CURRENCY ON CURRENCY.EURO_CONVERSION_ID = T.CURRENCY_ID
             LEFT JOIN HL5_SALE_BUDGET_SPEND_REQUEST T2 ON T.HL5_SALES_ID = T2.HL5_SALES_ID
              LEFT JOIN BUDGET_SPEND_REQUEST T3 ON T2.BUDGET_SPEND_REQUEST_ID = T3.BUDGET_SPEND_REQUEST_ID
              and (T3.BUDGET_SPEND_REQUEST_STATUS_ID = 1 OR T3.BUDGET_SPEND_REQUEST_STATUS_ID = 2);

   out_result =  select
                    T.HL5_SALES_ID,
                    T.ORGANIZATION_ID,
                    T.ORGANIZATION_TYPE,
                    T.DESCRIPTION,
                    T.ORGANIZATION_NAME,
                    T.CURRENCY_ID,
                    T.CURRENCY_VALUE,
                    SUM(T.AMOUNT) * T.CURRENCY_VALUE AS AMOUNT
                from :va_out_result T
                  GROUP BY T.HL5_SALES_ID,
                            T.CURRENCY_ID,
                            T.CURRENCY_VALUE,
                           T.ORGANIZATION_ID,
                           T.ORGANIZATION_TYPE,
                           T.DESCRIPTION,
                           T.ORGANIZATION_NAME;


END;
