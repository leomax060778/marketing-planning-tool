PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::DEL_ALLOCATION_CATEGORY_OPTION_LEVEL" (
	IN in_category_id BIGINT,
	IN in_level_id BIGINT,
	in in_user_id bigint,
	OUT out_result BIGINT) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "PLANNING_TOOL"
	AS
BEGIN

DECLARE levelName nvarchar(255);
    levelName := '';

    select description into levelName from hierarchy_level where hierarchy_level_id = in_level_id;

     IF levelName = 'HL4' THEN
        UPDATE ALLOCATION_CATEGORY_OPTION_LEVEL ACOL
            SET ACOL.DELETED = 1
            , ACOL.ENABLED = 0
            , ACOL.modified_user_id = in_user_id
            , ACOL.modified_date_tz = CURRENT_TIMESTAMP
        WHERE ACOL.ALLOCATION_CATEGORY_OPTION_LEVEL_ID NOT IN (SELECT  ALLOCATION_CATEGORY_OPTION_LEVEL_ID FROM HL4_CATEGORY_OPTION WHERE DELETED = 0 AND ENABLED = 1 )
        AND HIERARCHY_LEVEL_ID = in_level_id;

     ELSEIF levelName = 'HL5' THEN
        UPDATE ALLOCATION_CATEGORY_OPTION_LEVEL ACOL
            SET ACOL.DELETED = 1
            , ACOL.ENABLED = 0
            , ACOL.modified_user_id = in_user_id
            , ACOL.modified_date_tz = CURRENT_TIMESTAMP
            WHERE ACOL.ALLOCATION_CATEGORY_OPTION_LEVEL_ID NOT IN (SELECT  ALLOCATION_CATEGORY_OPTION_LEVEL_ID FROM HL5_CATEGORY_OPTION WHERE DELETED = 0 AND ENABLED = 1 )
            AND HIERARCHY_LEVEL_ID = in_level_id;

     ELSEIF levelName = 'HL6' THEN
        UPDATE ALLOCATION_CATEGORY_OPTION_LEVEL ACOL
            SET ACOL.DELETED = 1
            , ACOL.ENABLED = 0
            , ACOL.modified_user_id = in_user_id
            , ACOL.modified_date_tz = CURRENT_TIMESTAMP
            WHERE ACOL.ALLOCATION_CATEGORY_OPTION_LEVEL_ID NOT IN (SELECT  ALLOCATION_CATEGORY_OPTION_LEVEL_ID FROM HL6_CATEGORY_OPTION WHERE DELETED = 0 AND ENABLED = 1 )
            AND HIERARCHY_LEVEL_ID = in_level_id;
     END IF;

    SELECT ::ROWCOUNT INTO out_result FROM DUMMY;
	
END;
