PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_HL5_FOR_SEARCH" (
		IN in_budget_year_id BIGINT
        ,IN in_region_id BIGINT
        ,IN in_subregion_id BIGINT
        ,IN in_limit INTEGER
        ,IN in_offset INTEGER
        ,IN in_user_id bigint
        , IN in_isSA tinyint
        , OUT total_rows INTEGER
		, OUT out_result TABLE (
			id bigint,
			parent_id bigint,
			BUDGET_YEAR BIGINT,
			acronym NVARCHAR(25),
			organization_acronym NVARCHAR(25), 
			region_name NVARCHAR(255),
			subregion_name NVARCHAR(255),
			path NVARCHAR(50)
			, in_budget TINYINT
		)
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "PLANNING_TOOL"
	AS
BEGIN
    if in_isSA = 1 then
        va_subresult = SELECT DISTINCT HL5.hl5_id as id
        		, HL5.hl4_id as parent_id
        		, BGY.BUDGET_YEAR
        		, HL1.acronym
        		, REPLACE(HL2.organization_acronym, 'N/A', '') AS organization_acronym
        		, REGION.region_name
        		, SUBREGION.subregion_name
                ,CONCAT(
                    CONCAT(
                        CONCAT(
                            CONCAT(
                                CONCAT(
                                    CONCAT(
                                    HL1.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)),
                                '-'),
                            HL3.ACRONYM),
                        '-'),
                    HL4.ACRONYM),
                 HL5.ACRONYM)
        		 AS path
                        , HL1.REGION_ID
                        , HL5.IN_BUDGET
        	FROM HL5 hl5
        	INNER JOIN HL4 hl4 ON hl4.hl4_id=hl5.hl4_id AND hl4.enabled=1 AND hl4.deleted=0
        	INNER JOIN HL3 ON HL4.hl3_id = HL3.hl3_id AND hl3.enabled=1 AND hl3.deleted=0
        	INNER JOIN HL3_USER ON HL3.HL3_ID = HL3_USER.HL3_ID
            INNER JOIN HL2 ON HL3.hl2_id = HL2.hl2_id AND hl2.enabled=1 AND hl2.deleted=0
            INNER JOIN HL1 ON HL2.hl1_id = HL1.hl1_id AND hl1.enabled=1 AND hl1.deleted=0
        	INNER JOIN BUDGET_YEAR BGY ON HL1.budget_year_id = BGY.budget_year_id
        	LEFT JOIN REGION ON HL1.region_id = REGION.region_id
        	LEFT JOIN SUBREGION ON HL1.subregion_id = SUBREGION.subregion_id
        	WHERE hl5.deleted = 0
        	  AND hl5.enabled = 1
        	   AND (BGY.BUDGET_YEAR_ID = in_budget_year_id)
        	  AND (SUBREGION.SUBREGION_ID = in_subregion_id OR in_subregion_id = 0)
        	  ORDER BY path, organization_acronym;
    else
    va_subresult = SELECT DISTINCT HL5.hl5_id as id
            		, HL5.hl4_id as parent_id
            		, BGY.BUDGET_YEAR
            		, HL1.acronym
            		, REPLACE(HL2.organization_acronym, 'N/A', '') AS organization_acronym
            		, REGION.region_name
            		, SUBREGION.subregion_name
                    ,CONCAT(
                        CONCAT(
                            CONCAT(
                                CONCAT(
                                    CONCAT(
                                        CONCAT(
                                        HL1.ACRONYM, SUBSTRING(TO_NVARCHAR(BGY.BUDGET_YEAR), 3, 2)),
                                    '-'),
                                HL3.ACRONYM),
                            '-'),
                        HL4.ACRONYM),
                     HL5.ACRONYM)
            		 AS path
                            , HL1.REGION_ID
                            , HL5.IN_BUDGET
            	FROM HL5 hl5
            	INNER JOIN HL4 hl4 ON hl4.hl4_id=hl5.hl4_id AND hl4.enabled=1 AND hl4.deleted=0
            	INNER JOIN HL3 ON HL4.hl3_id = HL3.hl3_id AND hl3.enabled=1 AND hl3.deleted=0
            	INNER JOIN HL3_USER ON HL3.HL3_ID = HL3_USER.HL3_ID
                INNER JOIN HL2 ON HL3.hl2_id = HL2.hl2_id AND hl2.enabled=1 AND hl2.deleted=0
                INNER JOIN HL1 ON HL2.hl1_id = HL1.hl1_id AND hl1.enabled=1 AND hl1.deleted=0
            	INNER JOIN BUDGET_YEAR BGY ON HL1.budget_year_id = BGY.budget_year_id
            	LEFT JOIN REGION ON HL1.region_id = REGION.region_id
            	LEFT JOIN SUBREGION ON HL1.subregion_id = SUBREGION.subregion_id
            	WHERE hl5.deleted = 0
            	  AND hl5.enabled = 1
            	   AND (BGY.BUDGET_YEAR_ID = in_budget_year_id)
            	  AND (SUBREGION.SUBREGION_ID = in_subregion_id OR in_subregion_id = 0)
            	  AND (HL3_USER.USER_ID = in_user_id)
            	  ORDER BY path, organization_acronym;
    end if;

    if in_region_id = -1 then
        va_subresult = SELECT T.ID
                              ,T.PARENT_ID
                              ,T.BUDGET_YEAR
                              ,T.ACRONYM
                              ,T.ORGANIZATION_ACRONYM
                              ,T.REGION_NAME
                              ,T.SUBREGION_NAME
                              ,T.PATH
                              , T.REGION_ID
                              , T.IN_BUDGET
                         from :va_subresult T
                    where T.REGION_ID = 0;
    else
        va_subresult = SELECT T.ID
                               ,T.PARENT_ID
                               ,T.BUDGET_YEAR
                               ,T.ACRONYM
                               ,T.ORGANIZATION_ACRONYM
                               ,T.REGION_NAME
                               ,T.SUBREGION_NAME
                               ,T.PATH
                               , T.REGION_ID
                               , T.IN_BUDGET
                      from :va_subresult T
                    where (T.REGION_ID = in_region_id OR in_region_id = 0);
    end if;

    SELECT COALESCE(COUNT(T.ID),0) INTO total_rows FROM :va_subresult T;

if (in_limit = -1) then
out_result = SELECT T.ID
                        ,T.PARENT_ID
                        ,T.BUDGET_YEAR
                        ,T.ACRONYM
                        ,T.ORGANIZATION_ACRONYM
                        ,T.REGION_NAME
                        ,T.SUBREGION_NAME
                        ,T.PATH
                        , T.IN_BUDGET
                       from :va_subresult T;
else
    out_result = SELECT T.ID
                        ,T.PARENT_ID
                        ,T.BUDGET_YEAR
                        ,T.ACRONYM
                        ,T.ORGANIZATION_ACRONYM
                        ,T.REGION_NAME
                        ,T.SUBREGION_NAME
                        ,T.PATH
                        , T.IN_BUDGET
                       from :va_subresult T
                    LIMIT :in_limit
                    OFFSET :in_offset;
end if;
END;
