PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_COST_CENTER_AVAILABLE_EMPLOYEES_RESPONSIBLE" (
    IN in_edit_mode TINYINT
    ,IN in_cost_center_id BIGINT
    ,OUT out_result TABLE(
    	EMPLOYEE_RESPONSIBLE_ID BIGINT,
        EMPLOYEE_RESPONSIBLE_DESCRIPTION nvarchar(255),
        FULL_NAME nvarchar(255),
        EMPLOYEE_NUMBER nvarchar(255)
    ))
    	LANGUAGE SQLSCRIPT
    	SQL SECURITY INVOKER
    	DEFAULT SCHEMA "PLANNING_TOOL"
    	READS SQL DATA AS
    BEGIN

    out_result = SELECT EMPLOYEE_RESPONSIBLE_ID,
                CONCAT(EMPLOYEE_RESPONSIBLE.FULL_NAME, CONCAT(', ', EMPLOYEE_RESPONSIBLE.EMPLOYEE_NUMBER)) AS EMPLOYEE_RESPONSIBLE_DESCRIPTION 
                ,EMPLOYEE_RESPONSIBLE.FULL_NAME
                ,EMPLOYEE_RESPONSIBLE.EMPLOYEE_NUMBER
                FROM EMPLOYEE_RESPONSIBLE
                WHERE EMPLOYEE_RESPONSIBLE.ENABLED = 1 AND EMPLOYEE_RESPONSIBLE.DELETED = 0
                ORDER BY EMPLOYEE_RESPONSIBLE.FULL_NAME;

    if in_edit_mode = 1 THEN
        out_result = SELECT employees.EMPLOYEE_RESPONSIBLE_ID
        , employees.EMPLOYEE_RESPONSIBLE_DESCRIPTION 
        ,employees.FULL_NAME
        ,employees.EMPLOYEE_NUMBER
        FROM :out_result employees
                    WHERE employees.EMPLOYEE_RESPONSIBLE_ID NOT IN (
                    	SELECT COST_CENTER_EMPLOYEE_RESPONSIBLE.EMPLOYEE_RESPONSIBLE_ID FROM COST_CENTER_EMPLOYEE_RESPONSIBLE
                    	WHERE COST_CENTER_EMPLOYEE_RESPONSIBLE.COST_CENTER_ID = in_cost_center_id
                    ) 
                    ORDER BY employees.EMPLOYEE_RESPONSIBLE_DESCRIPTION;
    END IF;
END;
