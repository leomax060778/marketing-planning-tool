PROCEDURE "PLANNING_TOOL"."xsplanningtool.db.procedures::GET_HL5_PARTNER_BY_HL5_ID" (
	IN in_hl5_id BIGINT,
	IN in_hierarchy_level_id BIGINT,
	OUT out_result TABLE (
		partner_name nvarchar(512),
		partner_id BIGINT,
		partner_type_name nvarchar(100),
		partner_type_id bigint,
		region_name nvarchar(255),
		region_id bigint,
		currency_id INTEGER,
        currency_value decimal(19, 6),
		value decimal(19, 6),
		intel_project_id nvarchar(255),
		claim_id nvarchar(255),
		comments nvarchar(255),
		company_name nvarchar(255),
		company_address nvarchar(255),
		invoice_number nvarchar(255),
		description nvarchar(255),
		budget_spend_request_status_id bigint,
		budget_spend_request_id bigint
		),
	OUT out_partner_attachment TABLE(
		partner_id bigint,
		BUDGET_SPEND_REQUEST_ID bigint,
		attachment_id bigint,
		user_id bigint,
		original_name nvarchar(255), 
		saved_name nvarchar(255), 
		attachment_size integer,
		created_date NVARCHAR(255)
	)
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "PLANNING_TOOL"
	READS SQL DATA AS
BEGIN
	temp_out_hl5_partner =
	    SELECT hl5_partner.partner_name,
        hl5_partner.partner_id,
        partner_type.type_name as partner_type_name,
        hl5_partner.partner_type_id,
        region.region_name,
        region.region_id,
        hl5_partner.value,
        hl5_partner.budget_spend_request_id,
        hl5_partner.currency_id,
        hl5_partner.intel_project_id,
        hl5_partner.claim_id,
        hl5_partner.comments,
        hl5_partner.company_name,
        hl5_partner.company_address,
        hl5_partner.invoice_number
        FROM hl5_partner
        inner join partner_type	on hl5_partner.partner_type_id = partner_type.partner_type_id
        left join region on hl5_partner.region_id = region.region_id
        WHERE hl5_partner.hl5_id = in_hl5_id
          AND hl5_partner.enabled = 1
          AND hl5_partner.deleted = 0;

    out_result =
        select
        t.partner_name,
        t.partner_id,
        t.partner_type_name,
        t.partner_type_id,
        t.region_name,
        t.region_id,
        t.currency_id,
        c.currency_value,
        coalesce(t.value, coalesce(bsr.amount,0)) * c.currency_value as value,
        t.intel_project_id,
        t.claim_id,
        t.comments,
        t.company_name,
        t.company_address,
        t.invoice_number,
        bsr.description,
        bsr.budget_spend_request_status_id,
        bsr.budget_spend_request_id
        from :temp_out_hl5_partner t
        inner join currency c on c.euro_conversion_id = t.currency_id
        left join budget_spend_request bsr on bsr.budget_spend_request_id = t.budget_spend_request_id
        and (bsr.BUDGET_SPEND_REQUEST_STATUS_ID = 1 OR bsr.BUDGET_SPEND_REQUEST_STATUS_ID = 2);
        
	out_partner_attachment = SELECT
     							"HL5_PARTNER".PARTNER_ID,
     							"PARTNER_ATTACHMENT".BUDGET_SPEND_REQUEST_ID,
								"ATTACHMENT".ATTACHMENT_ID, 
								"ATTACHMENT".CREATED_USER_ID AS USER_ID, 
								"ATTACHMENT".ORIGINAL_NAME, 
								"ATTACHMENT".SAVED_NAME, 
								"ATTACHMENT".ATTACHMENT_SIZE,
								TO_NVARCHAR("ATTACHMENT".CREATED_DATE_TZ, 'YYYY-MM-DD') AS CREATED_DATE
							FROM "PARTNER_ATTACHMENT"
								INNER JOIN "ATTACHMENT" AS ATTACHMENT ON "PARTNER_ATTACHMENT".attachment_id = ATTACHMENT.attachment_id
								INNER JOIN "HL5_PARTNER" AS HL5_PARTNER ON HL5_PARTNER.BUDGET_SPEND_REQUEST_ID = "PARTNER_ATTACHMENT".BUDGET_SPEND_REQUEST_ID
								WHERE "PARTNER_ATTACHMENT".HIERARCHY_LEVEL_ID = in_hierarchy_level_id 
								AND "ATTACHMENT".deleted = 0
								AND "ATTACHMENT".enabled = 1;
END;
