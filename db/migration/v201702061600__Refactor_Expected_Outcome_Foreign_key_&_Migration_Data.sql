--fix: outcomes to correct name
UPDATE OUTCOMES SET OUTCOMES_NAME = 'Assets - Case of Study/Success Story' WHERE OUTCOMES_NAME = 'Assets- Case of Study/Success Story';
UPDATE OUTCOMES SET OUTCOMES_NAME = 'Infrastructure' WHERE OUTCOMES_NAME = 'Infraestructure';

--Adding proxy column to store OUTCOME_ID referencing to EXPECTED_OUTCOME_LEVEL
ALTER TABLE "PLANNING_TOOL"."HL4_EXPECTED_OUTCOMES_DETAIL" ADD ("OUTCOMES_ID_PROXY" BIGINT NULL);
ALTER TABLE "PLANNING_TOOL"."HL5_EXPECTED_OUTCOMES_DETAIL" ADD ("OUTCOMES_ID_PROXY" BIGINT NULL);
ALTER TABLE "PLANNING_TOOL"."HL6_EXPECTED_OUTCOMES_DETAIL" ADD ("OUTCOMES_ID_PROXY" BIGINT NULL);

ALTER TABLE HL4_EXPECTED_OUTCOMES_DETAIL ADD CONSTRAINT HL4_OUTCOMES_ID FOREIGN KEY (OUTCOMES_ID_PROXY) REFERENCES EXPECTED_OUTCOME_LEVEL(EXPECTED_OUTCOME_LEVEL_ID);
ALTER TABLE HL5_EXPECTED_OUTCOMES_DETAIL ADD CONSTRAINT HL5_OUTCOMES_ID FOREIGN KEY (OUTCOMES_ID_PROXY) REFERENCES EXPECTED_OUTCOME_LEVEL(EXPECTED_OUTCOME_LEVEL_ID);
ALTER TABLE HL6_EXPECTED_OUTCOMES_DETAIL ADD CONSTRAINT HL6_OUTCOMES_ID FOREIGN KEY (OUTCOMES_ID_PROXY) REFERENCES EXPECTED_OUTCOME_LEVEL(EXPECTED_OUTCOME_LEVEL_ID);

---
UPDATE HL4_EXPECTED_OUTCOMES_DETAIL
   SET OUTCOMES_ID_PROXY = TT.EXPECTED_OUTCOME_LEVEL_ID
   FROM HL4_EXPECTED_OUTCOMES_DETAIL,
   (
   	select T2.EXPECTED_OUTCOME_LEVEL_ID, T1.OUTCOMES_ID from
   	(
   		select
   		ou.outcomes_id, ou.outcomes_name
   		from "PLANNING_TOOL"."OUTCOMES" ou
   		inner join "PLANNING_TOOL"."OUTCOMES_TYPE" ot on ot.OUTCOMES_TYPE_ID = ou.OUTCOMES_TYPE_ID
   		where ot.hierarchy_level_id = 1

   	) T1
   	inner join
   	(
   		select
   		eol.EXPECTED_OUTCOME_LEVEL_ID
   		, eol.EXPECTED_OUTCOME_ID
   		, eol.EXPECTED_OUTCOME_OPTION_ID
   		, eol.HIERARCHY_LEVEL_ID
   		, eoo.NAME
   		from "PLANNING_TOOL"."EXPECTED_OUTCOME_LEVEL" eol
   		inner join "PLANNING_TOOL"."EXPECTED_OUTCOME_OPTION" eoo on eoo.EXPECTED_OUTCOME_OPTION_ID = eol.EXPECTED_OUTCOME_OPTION_ID
   		where eol.HIERARCHY_LEVEL_ID = 1
   		and eol.deleted = 0 and eol.enabled = 1

   	) T2 on T1.outcomes_name = T2.name
   ) TT
   WHERE HL4_EXPECTED_OUTCOMES_DETAIL.OUTCOMES_ID = TT.OUTCOMES_ID;

----
UPDATE HL5_EXPECTED_OUTCOMES_DETAIL
  SET OUTCOMES_ID_PROXY = TT.EXPECTED_OUTCOME_LEVEL_ID
  FROM HL5_EXPECTED_OUTCOMES_DETAIL,
  (
    select T2.EXPECTED_OUTCOME_LEVEL_ID, T1.OUTCOMES_ID from
    (
        select
        ou.outcomes_id, ou.outcomes_name
        from "PLANNING_TOOL"."OUTCOMES" ou
        inner join "PLANNING_TOOL"."OUTCOMES_TYPE" ot on ot.OUTCOMES_TYPE_ID = ou.OUTCOMES_TYPE_ID
        where ot.hierarchy_level_id = 2

    ) T1
    inner join
    (
        select
        eol.EXPECTED_OUTCOME_LEVEL_ID
        , eol.EXPECTED_OUTCOME_ID
        , eol.EXPECTED_OUTCOME_OPTION_ID
        , eol.HIERARCHY_LEVEL_ID
        , eoo.NAME
        from "PLANNING_TOOL"."EXPECTED_OUTCOME_LEVEL" eol
        inner join "PLANNING_TOOL"."EXPECTED_OUTCOME_OPTION" eoo on eoo.EXPECTED_OUTCOME_OPTION_ID = eol.EXPECTED_OUTCOME_OPTION_ID
        where eol.HIERARCHY_LEVEL_ID = 2
        and eol.deleted = 0 and eol.enabled = 1

    ) T2 on T1.outcomes_name = T2.name
  ) TT
  WHERE HL5_EXPECTED_OUTCOMES_DETAIL.OUTCOMES_ID = TT.OUTCOMES_ID;

----
UPDATE HL6_EXPECTED_OUTCOMES_DETAIL
  SET OUTCOMES_ID_PROXY = TT.EXPECTED_OUTCOME_LEVEL_ID
  FROM HL6_EXPECTED_OUTCOMES_DETAIL,
  (
    select T2.EXPECTED_OUTCOME_LEVEL_ID, T1.OUTCOMES_ID from
    (
        select
        ou.outcomes_id, ou.outcomes_name
        from "PLANNING_TOOL"."OUTCOMES" ou
        inner join "PLANNING_TOOL"."OUTCOMES_TYPE" ot on ot.OUTCOMES_TYPE_ID = ou.OUTCOMES_TYPE_ID
        where ot.hierarchy_level_id = 3

    ) T1
    inner join
    (
        select
        eol.EXPECTED_OUTCOME_LEVEL_ID
        , eol.EXPECTED_OUTCOME_ID
        , eol.EXPECTED_OUTCOME_OPTION_ID
        , eol.HIERARCHY_LEVEL_ID
        , eoo.NAME
        from "PLANNING_TOOL"."EXPECTED_OUTCOME_LEVEL" eol
        inner join "PLANNING_TOOL"."EXPECTED_OUTCOME_OPTION" eoo on eoo.EXPECTED_OUTCOME_OPTION_ID = eol.EXPECTED_OUTCOME_OPTION_ID
        where eol.HIERARCHY_LEVEL_ID = 3
        and eol.deleted = 0 and eol.enabled = 1

    ) T2 on T1.outcomes_name = T2.name
  ) TT
  WHERE HL6_EXPECTED_OUTCOMES_DETAIL.OUTCOMES_ID = TT.OUTCOMES_ID;

--
--RENAME COLUMN OUTCOMES_ID TO OUTCOMES_ID_BKP
RENAME COLUMN  "PLANNING_TOOL"."HL4_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" TO "OUTCOMES_ID_BKP";

--RENAME COLUMN OUTCOMES_ID_PROXY TO OUTCOMES_ID
RENAME COLUMN  "PLANNING_TOOL"."HL4_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID_PROXY" TO "OUTCOMES_ID";

--RENAME COLUMN OUTCOMES_ID TO OUTCOMES_ID_BKP
RENAME COLUMN  "PLANNING_TOOL"."HL5_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" TO "OUTCOMES_ID_BKP";

--RENAME COLUMN OUTCOMES_ID_PROXY TO OUTCOMES_ID
RENAME COLUMN  "PLANNING_TOOL"."HL5_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID_PROXY" TO "OUTCOMES_ID";


--RENAME COLUMN OUTCOMES_ID TO OUTCOMES_ID_BKP
RENAME COLUMN  "PLANNING_TOOL"."HL6_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" TO "OUTCOMES_ID_BKP";

--RENAME COLUMN OUTCOMES_ID_PROXY TO OUTCOMES_ID
RENAME COLUMN  "PLANNING_TOOL"."HL6_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID_PROXY" TO "OUTCOMES_ID";

--
ALTER TABLE "PLANNING_TOOL"."HL4_EXPECTED_OUTCOMES_DETAIL" ALTER (OUTCOMES_ID_BKP bigint NULL);
ALTER TABLE "PLANNING_TOOL"."HL5_EXPECTED_OUTCOMES_DETAIL" ALTER (OUTCOMES_ID_BKP bigint NULL);
ALTER TABLE "PLANNING_TOOL"."HL6_EXPECTED_OUTCOMES_DETAIL" ALTER (OUTCOMES_ID_BKP bigint NULL);

--add comment to tables abaut this change
comment on column "PLANNING_TOOL"."HL4_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" is 'FK to EXPECTED_OUTCOME_LEVEL';
comment on column "PLANNING_TOOL"."HL5_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" is 'FK to EXPECTED_OUTCOME_LEVEL';
comment on column "PLANNING_TOOL"."HL6_EXPECTED_OUTCOMES_DETAIL"."OUTCOMES_ID" is 'FK to EXPECTED_OUTCOME_LEVEL';

-- *************************************************************************************
-- Update schema version
INSERT INTO SCHEMA_VERSION(VERSION, DESCRIPTION, SCRIPT)
VALUES('V5.0.0-20', 'Refactor Expected Outcome Foreign Key in L4/L5/L6 OUTCOME_ID column to EXPECTED_OUTCOME_LEVEL_ID and data migration', 'v201702061600__Refactor_Expected_Outcome_Foreign_key_&_Migration_Data.sql');

COMMIT;